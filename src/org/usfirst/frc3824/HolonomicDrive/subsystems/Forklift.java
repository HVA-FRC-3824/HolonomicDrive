// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc3824.HolonomicDrive.subsystems;

import org.usfirst.frc3824.HolonomicDrive.Constants;
import org.usfirst.frc3824.HolonomicDrive.RobotMap;
import org.usfirst.frc3824.HolonomicDrive.commands.*;

import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 *
 */
public class Forklift extends Subsystem
{
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    Encoder quadratureEncoder = RobotMap.forkliftQuadratureEncoder;
    SpeedController motor = RobotMap.forkliftMotor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	// Put methods for controlling this subsystem
	// here. Call these from Commands.
	private PIDController forkliftController = new PIDController(
			Constants.ForkliftControllerP, Constants.ForkliftControllerI,
			Constants.ForkliftControllerD, RobotMap.forkliftQuadratureEncoder,
			RobotMap.forkliftMotor);

	public void initDefaultCommand()
	{
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new ForkliftMoveToPosition());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

		// Set the default command for a subsystem here.
		// setDefaultCommand(new MySpecialCommand());

		// forkliftController.setInputRange(-100000.0, 100000.0);

		SmartDashboard.putNumber("ForkliftPosition", 100);
	}

	public void StartPID()
	{
		forkliftController.enable();
	}

	public void StopPID()
	{
		forkliftController.disable();
	}

	public void SetSetpoint(double setpoint)
	{
		forkliftController.setSetpoint(setpoint);
	}

	public double GetEncoderValue()
	{
		return RobotMap.forkliftQuadratureEncoder.get();
	}

	public double GetError()
	{
		return forkliftController.getError();
	}
}
